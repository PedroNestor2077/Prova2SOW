[{"/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/index.js":"1","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/reportWebVitals.js":"2","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/App.js":"3","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/loginPage.jsx":"4","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/addPage.jsx":"5","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/listPage.jsx":"6","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/style.js":"7","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/loginForm.jsx":"8","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/alreadyLogged.jsx":"9","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/listUser.jsx":"10","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/navBar.jsx":"11","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/addUserForm.jsx":"12","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/functions.js":"13","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/userInput.jsx":"14","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/notLogged.jsx":"15","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/listRow.jsx":"16","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/editPage.jsx":"17"},{"size":287,"mtime":1611509806559,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1611014099973,"results":"20","hashOfConfig":"19"},{"size":492,"mtime":1611509806555,"results":"21","hashOfConfig":"19"},{"size":459,"mtime":1611509806559,"results":"22","hashOfConfig":"19"},{"size":260,"mtime":1611509806555,"results":"23","hashOfConfig":"19"},{"size":248,"mtime":1611509806559,"results":"24","hashOfConfig":"19"},{"size":8920,"mtime":1611521019007,"results":"25","hashOfConfig":"19"},{"size":960,"mtime":1611509806555,"results":"26","hashOfConfig":"19"},{"size":301,"mtime":1611509806555,"results":"27","hashOfConfig":"19"},{"size":4109,"mtime":1611521619881,"results":"28","hashOfConfig":"19"},{"size":1744,"mtime":1611509806555,"results":"29","hashOfConfig":"19"},{"size":6187,"mtime":1611517036278,"results":"30","hashOfConfig":"19"},{"size":5025,"mtime":1611509806555,"results":"31","hashOfConfig":"19"},{"size":642,"mtime":1611515091820,"results":"32","hashOfConfig":"19"},{"size":238,"mtime":1611509806559,"results":"33","hashOfConfig":"19"},{"size":1993,"mtime":1611521257329,"results":"34","hashOfConfig":"19"},{"size":848,"mtime":1611520685811,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"344ulm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/index.js",[],["82","83"],"/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/reportWebVitals.js",[],"/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/App.js",[],"/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/loginPage.jsx",["84"],"import NavBar from \"./generic/navBar\"\nimport {LoginBody} from \"./style\"\nimport LoginForm from \"./generic/loginForm\"\nimport AlreadyLogged from \"./generic/alreadyLogged\"\nfunction LoginPage() {\n  if(localStorage.getItem(\"logged\")==\"false\"){\n  return (\n    <LoginBody>\n      <NavBar />\n      <LoginForm />\n    </LoginBody>\n  );}else{\n    return (\n      <LoginBody>\n        <NavBar />\n        <AlreadyLogged/>\n      </LoginBody>\n    );}\n}\nexport default LoginPage;","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/addPage.jsx",[],"/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/listPage.jsx",[],"/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/style.js",[],"/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/loginForm.jsx",["85"],"import React from \"react\"\nimport {LoginFormS} from \"../style\"\nimport UserInput from \"./userInput\" \nimport {dinamicEmail,checkPassword,doLogin} from \"../functions\"\nfunction LoginForm(){\n    return(\n        <LoginFormS>\n            <span>\n                <img src=\"/images/icons/ico_user_default.png\" width=\"50px\"></img>\n                <h3> Sing in</h3>\n            </span>\n            <div>\n                <UserInput \n                    id_img=\"img-email\" placeholder=\"Email\" src=\"/images/icons/ico_email.png\" \n                     id=\"email\" Blur={dinamicEmail}\n                ></UserInput>\n                <UserInput \n                    id_img=\"img-password\" placeholder=\"Password\" type=\"password\"\n                    src=\"/images/icons/ico_password.png\"  id=\"password\" Blur={checkPassword}>\n                 </UserInput>\n                <button onClick={doLogin}>Login</button>\n            </div>\n        </LoginFormS>\n    )\n};\n\nexport default LoginForm","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/alreadyLogged.jsx",["86"],"import {AddBody} from \"../style\"\nfunction AlreadyLogged() {\n    return (\n      <div>\n          <h2>Você já está logado!</h2>\n          <a\n            href=\"/\" onClick={()=>\n            localStorage.setItem('logged',false)}>\n            Singout</a>\n      </div>\n    );\n}\nexport default AlreadyLogged","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/listUser.jsx",["87","88","89","90","91"],"import React,{useEffect,useState} from \"react\"\nimport {ListContainer,ListHeader,List} from \"../style\"\nimport ListRow from \"../generic/listRow\"\nimport {ToolsListBarS,SearchBar,Pages,Load} from \"../style\"\nimport NotLogged from \"../generic/notLogged\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nfunction ListUser(){\n    const options={\n        method:'GET',\n        headers:{\n            \"Content-Type\":\"application/json\"\n          }\n        }\n    const [Lista,setLista]=useState()\n    const [Page,setPage]=useState(1)\n    async function update(url){\n        setLista(\n            <Load>\n                <CircularProgress color=\"inherit\" />\n            </Load>\n        )\n        const UsersResponse=await fetch(url,options);\n        const MyUsers=await UsersResponse.json()\n        /* Criar lista de elementos react para a listagem */\n        const RowList=[]\n         for (var user in MyUsers){\n            let nome=MyUsers[user].nome\n            nome=nome.charAt(0).toUpperCase() + nome.slice(1)\n            RowList.push(<ListRow \n                key={MyUsers[user].id} \n                userID={MyUsers[user].id} \n                nome={nome}\n                cpf={MyUsers[user].cpf}\n                email={MyUsers[user].email} \n                cidade={MyUsers[user].endereco.cidade} \n                bairro={MyUsers[user].endereco.bairro}\n                numero={MyUsers[user].endereco.numero} \n                cep={MyUsers[user].endereco.cep} \n                rua={MyUsers[user].endereco.rua}\n                    />)\n        }; \n        if (RowList.length==0){\n            setLista(\n            <Load>\n                <h1>Nada a exibir.</h1>\n            </Load>\n            )\n        }else{\n            setLista(RowList)\n        }\n    };\n    function doSearch() {\n        let text=document.getElementById(\"search\").value\n        let url=`http://localhost:5000/usuarios?q=${text}&_limit=10`\n        update(url)\n    };\n    /* Atualizar a lista sempre que a lista for renderizada */\n    useEffect(()=>update(`http://localhost:5000/usuarios?_page=${Page}&_limit=10`),[Page])\n    if (localStorage.getItem(\"logged\")==\"true\"){\n        return(\n        <ListContainer>\n                    <ToolsListBarS>\n                        <SearchBar>\n                            <div>\n                                <button onClick={doSearch}>\n                                    <img src=\"/images/icons/ico_find.png\" width=\"40px\"></img>\n                                </button>\n                                <input id='search' placeholder=\"Buscar...\"></input>\n                            </div>\n                        </SearchBar>\n                        <Pages>\n                            <span>\n                                <button onClick={()=>{\n                                    if(Page>0){\n                                        setPage(Page-1)\n                                    }else{\n                                        setPage(0)\n                                    }\n                                    \n                                }}>≺ </button>\n                                <p>{Page}</p>\n                                <button onClick={()=>{\n                                        setPage(Page+1)\n                                    }\n                                }>≻</button>\n                                <button onClick={()=>update(`http://localhost:5000/usuarios?_page=${Page}&_limit=10`)}><img width=\"20px\" src=\"images/icons/ico_reload.png\"></img></button>\n                            </span>\n                        </Pages>\n                    </ToolsListBarS>\n                    <List>\n                        <ListHeader>\n                            <h2>Nome</h2>\n                            <h2>CPF</h2>\n                            <h2>Email</h2>\n                            <h2>Cidade</h2>\n                            <h2>Opções</h2>\n                        </ListHeader>\n                        {Lista}\n                    </List>\n            </ListContainer> \n        );\n    }else{\n        return <NotLogged/>\n    }\n};\nexport default ListUser","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/navBar.jsx",["92","93","94","95","96","97","98","99"],"import React from \"react\"\nimport {TopBar,SingOut} from \"../style\"\nimport {Link} from \"react-router-dom\"\nfunction NavBar(){\n    if (localStorage.getItem(\"logged\")==\"true\"){\n        return( \n            <TopBar >\n                <span>\n                    <img src=\"/images/icons/ico_give_up.png\" width=\"150px\"></img>\n                </span>\n                <div>\n                    <button >\n                        <img src=\"/images/icons/ico_add.png\" width=\"35px\"></img>\n                        <Link to=\"/add\">Add</Link>\n                    </button>\n                    <button>\n                        <img src=\"/images/icons/ico_list.png\" width=\"23px\"></img>\n                        <Link to=\"/users\">Usuários</Link>\n                    </button>\n                </div>\n                <form>\n                    <Link to=\"/\" onClick={()=>\n                        localStorage.setItem('logged',false)}>Singout\n                    </Link>\n                </form>\n        </TopBar>\n        );}\n        else{\n            return( \n                <TopBar >\n                    <span>\n                        <img src=\"/images/icons/ico_give_up.png\" width=\"150px\"></img>\n                    </span>\n                    <div>\n                        <button>\n                            <img src=\"/images/icons/ico_add.png\" width=\"35px\"></img>\n                            <Link to=\"/add\">Add</Link>\n                        </button>\n                        <button>\n                            <img src=\"/images/icons/ico_list.png\" width=\"23px\"></img>\n                            <Link to=\"/users\">Users</Link>\n                        </button>\n                    </div>\n                </TopBar>\n            );}\n    \n};\nexport default NavBar","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/addUserForm.jsx",["100","101"],"import {UserForm} from \"../style\"\nimport UserInput from \"./userInput\"\nimport NotLogged from \"../generic/notLogged\"\nimport {checkEmail,checkCPF,sendToast,isEmpty,ViaCEP,\n      dinamicEmail,dinamicNome,dinamicCPF,dinamicCidade,\n      dinamicBairro,dinamicRua,dinamicNumero\n    } \nfrom \"../functions.js\"\nfunction AddUserForm(props) {\n  function doSubmit(){\n      const nome=document.getElementById(\"nome\")\n      const cpf=document.getElementById(\"cpf\")\n      const email=document.getElementById(\"email\")\n      const cep=document.getElementById(\"cep\")\n      const rua=document.getElementById(\"rua\")\n      const numero=document.getElementById(\"numero\")\n      const bairro=document.getElementById(\"bairro\")\n      const cidade=document.getElementById(\"cidade\")\n      /* ---------Validação------- */\n      if (\n        isEmpty(nome.value)&&\n        isEmpty(cpf.value)&&\n        isEmpty(email.value)&&\n        isEmpty(cep.value)&&\n        isEmpty(rua.value)&&\n        isEmpty(numero.value)&&\n        isEmpty(bairro.value)&&\n        isEmpty(cidade.value)&&\n        checkEmail(email)\n      )\n        {\n          console.log(props.action)\n          if(props.action==\"PUT\"){\n            PUT(\n              nome.value,cpf.value,email.value,rua.value,\n              bairro.value,cidade.value,cep.value,numero.value\n            )}else{\n            POST(\n              nome.value,cpf.value,email.value,rua.value,\n              bairro.value,cidade.value,cep.value,numero.value\n              )}\n          }\n        else{\n          sendToast(\"Dados inválidos!\",\"error\")\n        }\n      \n  };\n  async function POST(\n    nome,cpf,email,rua,bairro,cidade,cep,numero\n    ){\n    const Mydb=\"http://localhost:5000/usuarios\"\n     const data={\n       id:\"\",\n      nome:nome,\n      cpf:cpf,\n      email:email,\n      endereco: {\n        cep:cep,\n        rua:rua,\n        numero:numero,\n        bairro:bairro,\n        cidade:cidade,\n        }   \n      }\n    const options={\n      method:'POST',\n      body:JSON.stringify(data),\n      headers:{\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    fetch(Mydb,options)\n    .then((response)=>{\n      if (response.ok){\n        let nome=document.getElementById(\"nome\")\n        let cpf=document.getElementById(\"cpf\")\n        let email=document.getElementById(\"email\")\n        let cep=document.getElementById(\"cep\")\n        let rua=document.getElementById(\"rua\")\n        let numero=document.getElementById(\"numero\")\n        let bairro=document.getElementById(\"bairro\")\n        let cidade=document.getElementById(\"cidade\")\n        let img_nome=document.getElementById(\"img-nome\")\n        let img_cpf=document.getElementById(\"img-cpf\")\n        let img_email=document.getElementById(\"img-email\")\n        let img_cep=document.getElementById(\"img-cep\")\n        let img_rua=document.getElementById(\"img-rua\")\n        let img_numero=document.getElementById(\"img-numero\")\n        let img_bairro=document.getElementById(\"img-bairro\")\n        let img_cidade=document.getElementById(\"img-cidade\") \n        nome.value=\"\"\n        cpf.value=\"\"\n        email.value=''\n        cep.value=\"\"\n        rua.value=\"\"\n        numero.value=\"\"\n        bairro.value=\"\"\n        cidade.value=\"\"\n        img_nome.src=\"\"\n        img_cpf.src=\"\"\n        img_cpf.src=\"\"\n        img_email.src=\"\"\n        img_cep.src=\"\"\n        img_rua.src=\"\"\n        img_numero.src=\"\"\n        img_bairro.src=\"\"\n        img_cidade.src=\"\"\n        sendToast(\"Usuário adicionado!\",\"success\")\n      }else{\n        sendToast(\"Não foi possivel se conectar.\",\"warn\")\n      }\n    })\n    .catch((error)=>{\n      sendToast(\"Não foi possivel adicionar o usuário.\",\"error\")\n    })\n  }\n  async function PUT(\n    nome,cpf,email,rua,bairro,cidade,cep,numero\n    ){\n    console.log(\"passei no post\")\n    const Mydb=`http://localhost:5000/usuarios/${props.userID}`\n    console.log(props.userID)\n     const data={\n       id:\"\",\n      nome:nome,\n      cpf:cpf,\n      email:email,\n      endereco: {\n        cep:cep,\n        rua:rua,\n        numero:numero,\n        bairro:bairro,\n        cidade:cidade,\n        }   \n      }\n    const options={\n      method:'PUT',\n      body:JSON.stringify(data),\n      headers:{\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    fetch(Mydb,options)\n    .then((response)=>{\n      if (response.ok){\n        sendToast(\"Usuario editado!\",\"success\")\n      }else{\n        sendToast(\"Erro ao editar.\",\"warn\")\n      }\n    })\n    .catch((error)=>{\n      sendToast(\"Erro ao editar.\",\"error\")\n    })\n  }\n  if (localStorage.getItem(\"logged\")==\"true\"){\n  return (\n    <UserForm>\n      <div>\n        <UserInput \n          id_img=\"img-nome\" placeholder=\"Username\" src=\"/images/icons/ico_user_default.png\" \n           id=\"nome\" Blur={dinamicNome} value={props.nome}\n        />\n        <UserInput \n          id_img=\"img-cpf\" placeholder=\"CPF\" src=\"/images/icons/ico_cpf.png\" \n           id=\"cpf\"  func={checkCPF} size={14} Blur={dinamicCPF} value={props.cpf}\n        />\n        <UserInput \n          id_img=\"img-email\" placeholder=\"Email\" src=\"/images/icons/ico_email.png\" \n           id=\"email\" Blur={dinamicEmail}  value={props.email}\n        />\n        <UserInput \n          id_img=\"img-cep\"  placeholder=\"CEP\" src=\"/images/icons/ico_endereco.png\" \n           id=\"cep\" Blur={ViaCEP} value={props.cep}\n        />\n        <UserInput \n          id_img=\"img-cidade\"  placeholder=\"Cidade\" src=\"/images/icons/ico_cidade.png\" \n           id=\"cidade\" Blur={dinamicCidade} value={props.cidade}\n        />\n        <UserInput \n          id_img=\"img-bairro\"  placeholder=\"Bairro\" src=\"/images/icons/ico_endereco.png\" \n           id=\"bairro\" Blur={dinamicBairro} value={props.bairro}\n        />\n        <UserInput \n          id_img=\"img-rua\"  placeholder=\"Rua\" src=\"/images/icons/ico_endereco.png\" \n           id=\"rua\" Blur={dinamicRua} value={props.rua}\n        />\n        <UserInput \n          id_img=\"img-numero\"  placeholder=\"Número\" src=\"/images/icons/ico_home.png\" \n           id=\"numero\" type=\"number\" Blur={dinamicNumero} value={props.numero}\n        />\n        <button onClick={doSubmit}>Confirmar</button>\n      </div>\n    </UserForm>\n  );}\n  else{\n    return <NotLogged/>\n  }\n}\nexport default AddUserForm;","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/functions.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import {toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure()\n/* -------------------------FUNÇOES DIVERÇAS----------------- */\nexport function sendToast(msg,mode){\n  if (mode==\"error\"){\n    return toast.error(msg)\n  }\n  else if(mode==\"success\"){\n    return toast.success(msg)\n  }\n  else if(mode==\"warn\"){\n  return toast.warn(msg)\n  }\n  else{\n    return toast.info(msg)\n  }\n}\n/* ----------------Validação de inputs---------- */\nexport function checkPassword(){\n  const password=document.getElementById(\"password\")\n  let err_img=document.getElementById(\"img-password\")\n  if (password.value.length>4){\n    err_img.src=\"/images/icons/ico_valid.png\"\n    return true\n  }else{\n    err_img.src=\"/images/icons/ico_invalid.png\"\n    return false\n  }\n}\nexport function checkEmail(input){\n    let usuario = input.value.substring(0, input.value.indexOf(\"@\"));\n    let dominio = input.value.substring(input.value.indexOf(\"@\")+ 1, input.value.length);\n    \n    if ((usuario.length >=1) &&\n        (dominio.length >=3) &&\n        (usuario.search(\"@\")==-1) &&\n        (dominio.search(\"@\")==-1) &&\n        (usuario.search(\" \")==-1) &&\n        (dominio.search(\" \")==-1) &&\n        (dominio.search(\".\")!=-1) &&\n        (dominio.indexOf(\".\") >=1)&&\n        (dominio.lastIndexOf(\".\") < dominio.length - 1)) \n        {\n          return true\n        }else{\n          return false\n        }\n};\nexport function dinamicEmail(){\n  const email=document.getElementById(\"email\")\n  let err_img=document.getElementById(\"img-email\")\n  if (checkEmail(email)){\n    err_img.src=\"/images/icons/ico_valid.png\"\n  }else{\n    err_img.src=\"/images/icons/ico_invalid.png\"\n  }\n}\nexport function checkCPF(){\n  const input=document.getElementById(\"cpf\")\n  const cpf=input.value\n  if(cpf.length==3 || cpf.length==7){\n    input.value=(cpf+\".\")\n  }\n  if(cpf.length==11){\n    input.value=(cpf+\"-\")\n  }\n  if(cpf.length>14){\n    let _cpf=cpf.split(([0, 2]))\n    console.log(_cpf[0])\n  }\n};\nexport function isEmpty(iten){\n  if (iten != \"\"){\n    return true\n  }else{\n    return false\n  }\n}\nexport function ViaCEP(){\n  let cep=document.getElementById('cep').value\n  if(cep.length==8){\n    fetch(`https://viacep.com.br/ws/${cep}/json`)\n      .then((RespostaDoServer)=>{\n        return RespostaDoServer.json();\n      })\n      .then((DadosDoCep)=>{        \n        if (DadosDoCep.logadouro!=undefined){\n          let rua=document.getElementById('rua')\n          rua.value=DadosDoCep.logadouro\n        }\n        if (DadosDoCep.bairro!=undefined){\n          let bairro=document.getElementById('bairro')\n          bairro.value=DadosDoCep.bairro \n        }\n        if (DadosDoCep.localidade!=undefined){\n          let cidade=document.getElementById('cidade')\n          cidade.value=DadosDoCep.localidade\n        }\n        let err_img=document.getElementById(\"img-cep\")\n        err_img.src=\"/images/icons/ico_valid.png\"\n      })\n        \n\n  }else{\n    let err_img=document.getElementById(\"img-cep\")\n    err_img.src=\"/images/icons/ico_invalid.png\"\n  }\n\n}\nexport function dinamicNome(){\n  const nome=document.getElementById(\"nome\")\n  let err_img=document.getElementById(\"img-nome\")\n  if (nome.value==\"\"){\n    err_img.src=\"/images/icons/ico_invalid.png\"\n  }else{\n    err_img.src=\"/images/icons/ico_valid.png\"\n  }\n}\nexport function dinamicCPF(){\n  const cpf=document.getElementById(\"cpf\")\n  let err_img=document.getElementById(\"img-cpf\")\n  if (cpf.value.length==14){\n    err_img.src=\"/images/icons/ico_valid.png\"\n  }else{\n    err_img.src=\"/images/icons/ico_invalid.png\"\n  }\n}\nexport function dinamicCidade(){\n  const cidade=document.getElementById(\"cidade\")\n  let err_img=document.getElementById(\"img-cidade\")\n  if (cidade.value==\"\"){\n    err_img.src=\"/images/icons/ico_invalid.png\"\n  }else{\n    err_img.src=\"/images/icons/ico_valid.png\"\n  }\n}\nexport function dinamicRua(){\n  const rua=document.getElementById(\"rua\")\n  let err_img=document.getElementById(\"img-rua\")\n  if (rua.value==\"\"){\n    err_img.src=\"/images/icons/ico_invalid.png\"\n  }else{\n    err_img.src=\"/images/icons/ico_valid.png\"\n  }\n}\nexport function dinamicNumero(){\n  const numero=document.getElementById(\"numero\")\n  let err_img=document.getElementById(\"img-numero\")\n  if (numero.value==\"\"){\n    err_img.src=\"/images/icons/ico_invalid.png\"\n  }else{\n    err_img.src=\"/images/icons/ico_valid.png\"\n  }\n}\nexport function dinamicBairro(){\n  const bairro=document.getElementById(\"bairro\")\n  let err_img=document.getElementById(\"img-bairro\")\n  if (bairro.value==\"\"){\n    err_img.src=\"/images/icons/ico_invalid.png\"\n  }else{\n    err_img.src=\"/images/icons/ico_valid.png\"\n  }\n}\n/* ----------------------Envio de formulários-------------- */\nexport function doLogin(){\n  let email=document.getElementById(\"email\")\n  if (checkEmail(email) && checkPassword()){\n    console.log(\"login!\")\n    localStorage.setItem(\"logged\",true)\n    sendToast('Prova Pedro Nestor-2SOW,Bem Vindo!')\n    setTimeout(()=>{window.location.href=\"/users\"},4000)\n  }\n  else{\n    sendToast(\"Dados inválidos!\",\"error\")\n  }\n}\n","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/userInput.jsx",["124","125"],"import React from \"react\"\nimport {UserInputS} from \"../style\"\nfunction UserInput(props){\n    return(\n        <UserInputS width={props.width} >\n            <img \n                src={props.src} width=\"25px\">\n            </img>\n\n            <input \n                type={props.type} placeholder={props.placeholder} id={props.id}  \n                onChange={props.func} maxLength={props.size} onBlur={props.Blur} \n                type={props.type} defaultValue={props.value} >\n            </input>\n            <img \n                width=\"25px\" alt=\"\" id={props.id_img}>\n            </img>\n        </UserInputS>\n    )\n};\nexport default UserInput","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/notLogged.jsx",["126"],"import {AddBody} from \"../style\"\nfunction NotLogged() {\n    return (\n      <div>\n            <h2>Você não está logado!</h2>\n            <a href=\"/\">\n                Entrar\n            </a>\n      </div>\n    );\n}\nexport default NotLogged","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/listRow.jsx",["127","128"],"import React,{useState} from \"react\"\nimport {ListRowS} from \"../style\"\nimport EditPage from \"../generic/editPage\"\nimport {sendToast} from \"../functions\"\nfunction ListRow(props){\n    console.log(props.userID)\n    const [ShowEditPage,setEditPages]=useState('')\n    function del(evt){\n        let id =(evt.target.id)\n        fetch('http://localhost:5000/usuarios/' + id, {\n            method: 'DELETE'\n        })\n        .then((response)=>{\n            if(response.ok){\n                sendToast(\"Usuário deletado!\",'success')\n            }else{\n                sendToast(\"Falha ao deletar.\",\"warn\")\n            }\n        })\n        .catch((error)=>{\n            sendToast('Falha ao deletar',\"error\")\n        })\n    }\n    function edit(evt) {\n        let id =(evt.target.id)\n        console.log(id)\n        setEditPages(\n            /* Passardados do usuario como props para serem usadas pelo \"userForm\" nas caixas de input */\n            <EditPage \n                nome={props.nome} cpf={props.cpf} email={props.email} \n                cidade={props.cidade} userID={props.userID} rua={props.rua} action=\"PUT\"\n                numero={props.numero} bairro={props.bairro} cep={props.cep} >\n            </EditPage>\n        )\n    }\n    return(   \n        <ListRowS>\n            <span >{props.nome}</span>\n            <span >{props.cpf}</span>\n            <span >{props.email}</span>\n            <span >{props.cidade}</span>\n            <span >\n                <button \n                    id={props.userID} onClick={del}>\n                    <img id={props.userID} width=\"20px\" src=\"images/icons/ico_delete.png\"></img>\n                </button>\n                <button\n                    id={props.userID} onClick={edit}>\n                    <img id={props.userID} width=\"20px\" src=\"images/icons/ico_edit.png\"></img>\n                </button>\n            </span>\n            {/* State que retorna a página \"EditPage*/}\n            {ShowEditPage}\n        </ListRowS>\n    )\n};\nexport default ListRow","/home/desenvolvimento/Documents/Projetos/Prova-2SOW/give-up/src/components/generic/editPage.jsx",["129","130"],"import React from \"react\"\nimport {EditPageS,FormEdit} from \"../style\"\nimport AddUserForm from \"../generic/addUserForm\"\nfunction EditPage(props){\n    return(  \n        <EditPageS >   \n            <div>\n                <a href=\"/users\"><img src=\"/images/icons/ico_close.png\" width=\"40px\"></img></a>\n                <h1>Editar usuário- {props.nome}</h1>\n                    {/* Passar props para setar os dados do usuario nas caixas de input */}\n                    <AddUserForm \n                        nome={props.nome} cpf={props.cpf} email={props.email} cep={props.cep} \n                        userID={props.userID} cidade={props.cidade}\n                        bairro={props.bairro} rua={props.rua} numero={props.numero} action=\"PUT\" >\n                    </AddUserForm>\n            </div>\n        </EditPageS>\n    )\n};\n\nexport default EditPage",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":6,"column":36,"nodeType":"137","messageId":"138","endLine":6,"endColumn":38},{"ruleId":"139","severity":1,"message":"140","line":9,"column":17,"nodeType":"141","endLine":9,"endColumn":76},{"ruleId":"142","severity":1,"message":"143","line":1,"column":9,"nodeType":"144","messageId":"145","endLine":1,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":42,"column":27,"nodeType":"137","messageId":"138","endLine":42,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":58,"column":84,"nodeType":"148","endLine":58,"endColumn":90,"suggestions":"149"},{"ruleId":"135","severity":1,"message":"136","line":59,"column":39,"nodeType":"137","messageId":"138","endLine":59,"endColumn":41},{"ruleId":"139","severity":1,"message":"140","line":66,"column":37,"nodeType":"141","endLine":66,"endColumn":88},{"ruleId":"139","severity":1,"message":"140","line":86,"column":120,"nodeType":"141","endLine":86,"endColumn":172},{"ruleId":"142","severity":1,"message":"150","line":2,"column":16,"nodeType":"144","messageId":"145","endLine":2,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":5,"column":39,"nodeType":"137","messageId":"138","endLine":5,"endColumn":41},{"ruleId":"139","severity":1,"message":"140","line":9,"column":21,"nodeType":"141","endLine":9,"endColumn":76},{"ruleId":"139","severity":1,"message":"140","line":13,"column":25,"nodeType":"141","endLine":13,"endColumn":75},{"ruleId":"139","severity":1,"message":"140","line":17,"column":25,"nodeType":"141","endLine":17,"endColumn":76},{"ruleId":"139","severity":1,"message":"140","line":32,"column":25,"nodeType":"141","endLine":32,"endColumn":80},{"ruleId":"139","severity":1,"message":"140","line":36,"column":29,"nodeType":"141","endLine":36,"endColumn":79},{"ruleId":"139","severity":1,"message":"140","line":40,"column":29,"nodeType":"141","endLine":40,"endColumn":80},{"ruleId":"135","severity":1,"message":"136","line":33,"column":26,"nodeType":"137","messageId":"138","endLine":33,"endColumn":28},{"ruleId":"135","severity":1,"message":"136","line":155,"column":37,"nodeType":"137","messageId":"138","endLine":155,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":6,"column":11,"nodeType":"137","messageId":"138","endLine":6,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":9,"column":15,"nodeType":"137","messageId":"138","endLine":9,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":12,"column":15,"nodeType":"137","messageId":"138","endLine":12,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":37,"column":29,"nodeType":"137","messageId":"138","endLine":37,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":38,"column":29,"nodeType":"137","messageId":"138","endLine":38,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":39,"column":29,"nodeType":"137","messageId":"138","endLine":39,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":40,"column":29,"nodeType":"137","messageId":"138","endLine":40,"endColumn":31},{"ruleId":"135","severity":1,"message":"151","line":41,"column":29,"nodeType":"137","messageId":"138","endLine":41,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":62,"column":16,"nodeType":"137","messageId":"138","endLine":62,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":62,"column":33,"nodeType":"137","messageId":"138","endLine":62,"endColumn":35},{"ruleId":"135","severity":1,"message":"136","line":65,"column":16,"nodeType":"137","messageId":"138","endLine":65,"endColumn":18},{"ruleId":"135","severity":1,"message":"151","line":74,"column":12,"nodeType":"137","messageId":"138","endLine":74,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":82,"column":16,"nodeType":"137","messageId":"138","endLine":82,"endColumn":18},{"ruleId":"135","severity":1,"message":"151","line":88,"column":33,"nodeType":"137","messageId":"138","endLine":88,"endColumn":35},{"ruleId":"135","severity":1,"message":"151","line":92,"column":30,"nodeType":"137","messageId":"138","endLine":92,"endColumn":32},{"ruleId":"135","severity":1,"message":"151","line":96,"column":34,"nodeType":"137","messageId":"138","endLine":96,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":114,"column":17,"nodeType":"137","messageId":"138","endLine":114,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":123,"column":23,"nodeType":"137","messageId":"138","endLine":123,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":132,"column":19,"nodeType":"137","messageId":"138","endLine":132,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":141,"column":16,"nodeType":"137","messageId":"138","endLine":141,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":150,"column":19,"nodeType":"137","messageId":"138","endLine":150,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":159,"column":19,"nodeType":"137","messageId":"138","endLine":159,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":6,"column":13,"nodeType":"141","endLine":7,"endColumn":46},{"ruleId":"152","severity":1,"message":"153","line":13,"column":17,"nodeType":"154","endLine":13,"endColumn":34},{"ruleId":"142","severity":1,"message":"143","line":1,"column":9,"nodeType":"144","messageId":"145","endLine":1,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":45,"column":21,"nodeType":"141","endLine":45,"endColumn":91},{"ruleId":"139","severity":1,"message":"140","line":49,"column":21,"nodeType":"141","endLine":49,"endColumn":89},{"ruleId":"142","severity":1,"message":"155","line":2,"column":19,"nodeType":"144","messageId":"145","endLine":2,"endColumn":27},{"ruleId":"139","severity":1,"message":"140","line":8,"column":34,"nodeType":"141","endLine":8,"endColumn":86},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'AddBody' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'SingOut' is defined but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'FormEdit' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [Page, update]",{"range":"161","text":"162"},[2085,2091],"[Page, update]"]