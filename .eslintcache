[{"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/index.js":"1","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/App.js":"2","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/reportWebVitals.js":"3","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/listPage.jsx":"4","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/loginPage.jsx":"5","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/addPage.jsx":"6","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/style.js":"7","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/navBar.jsx":"8","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/userInput.jsx":"9","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/listUser.jsx":"10","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/loginForm.jsx":"11","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/addUserForm.jsx":"12","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/functions.js":"13","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/toast.jsx":"14","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/listRow.jsx":"15","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/editPage.jsx":"16","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/alreadyLogged.jsx":"17","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/notLogged.jsx":"18"},{"size":287,"mtime":1611352107602,"results":"19","hashOfConfig":"20"},{"size":492,"mtime":1611352028545,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611340355664,"results":"22","hashOfConfig":"20"},{"size":248,"mtime":1611415752357,"results":"23","hashOfConfig":"20"},{"size":459,"mtime":1611352730628,"results":"24","hashOfConfig":"20"},{"size":260,"mtime":1611415777953,"results":"25","hashOfConfig":"20"},{"size":8373,"mtime":1611415744341,"results":"26","hashOfConfig":"20"},{"size":1744,"mtime":1611412645244,"results":"27","hashOfConfig":"20"},{"size":644,"mtime":1611355309021,"results":"28","hashOfConfig":"20"},{"size":2994,"mtime":1611353430824,"results":"29","hashOfConfig":"20"},{"size":960,"mtime":1611413616793,"results":"30","hashOfConfig":"20"},{"size":4503,"mtime":1611355274383,"results":"31","hashOfConfig":"20"},{"size":5025,"mtime":1611414186856,"results":"32","hashOfConfig":"20"},{"size":131,"mtime":1611340355664,"results":"33","hashOfConfig":"20"},{"size":1577,"mtime":1611353871077,"results":"34","hashOfConfig":"20"},{"size":848,"mtime":1611410454891,"results":"35","hashOfConfig":"20"},{"size":301,"mtime":1611352845092,"results":"36","hashOfConfig":"20"},{"size":238,"mtime":1611353055182,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"11wz5ez",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/index.js",[],["82","83"],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/App.js",[],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/reportWebVitals.js",[],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/listPage.jsx",[],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/loginPage.jsx",["84"],"import NavBar from \"./generic/navBar\"\nimport {LoginBody} from \"./style\"\nimport LoginForm from \"./generic/loginForm\"\nimport AlreadyLogged from \"./generic/alreadyLogged\"\nfunction LoginPage() {\n  if(localStorage.getItem(\"logged\")==\"false\"){\n  return (\n    <LoginBody>\n      <NavBar />\n      <LoginForm />\n    </LoginBody>\n  );}else{\n    return (\n      <LoginBody>\n        <NavBar />\n        <AlreadyLogged/>\n      </LoginBody>\n    );}\n}\nexport default LoginPage;","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/addPage.jsx",[],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/style.js",[],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/navBar.jsx",["85","86","87","88","89","90","91","92"],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/userInput.jsx",["93","94","95"],"import React from \"react\"\nimport {UserInputS} from \"../style\"\nfunction UserInput(props){\n    return(\n        <UserInputS width={props.width} >\n            <img \n                src={props.src} width=\"25px\">\n            </img>\n\n            <input \n                type={props.type} placeholder={props.placeholder} id={props.id}  \n                onChange={props.func} maxLength={props.size} onBlur={props.Blur} \n                type={props.type} defaultValue={props.value} >\n            </input>\n\n            <img \n                width=\"20px\" allt=\"\" id={props.id_img}>\n            </img>\n        </UserInputS>\n    )\n};\nexport default UserInput","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/listUser.jsx",["96","97","98"],"import React,{useEffect,useState} from \"react\"\nimport {ListContainer,ListHeader,List} from \"../style\"\nimport ListRow from \"../generic/listRow\"\nimport {ToolsListBarS,SearchBar,Pages} from \"../style\"\nimport NotLogged from \"../generic/notLogged\"\nfunction ListUser(){\n    const options={\n        method:'GET',\n        headers:{\n            \"Content-Type\":\"application/json\"\n          }\n        }\n    const [Lista,setLista]=useState()\n    async function update(url){\n        setLista(<h1>loading...</h1>)\n        const UsersResponse=await fetch(url,options);\n        const MyUsers=await UsersResponse.json()\n        /* Criar lista de elementos react para a listagem */\n        const RowList=[]\n        for (var user in MyUsers){\n            RowList.push(<ListRow \n                key={MyUsers[user].id} \n                id={MyUsers[user].id} \n                nome={MyUsers[user].nome} \n                cpf={MyUsers[user].cpf}\n                email={MyUsers[user].email} \n                cidade={MyUsers[user].endereco.cidade} \n                bairro={MyUsers[user].endereco.bairro}\n                numero={MyUsers[user].endereco.numero} \n                cep={MyUsers[user].endereco.cep} \n                rua={MyUsers[user].endereco.rua}\n                    />)\n        };\n        setLista(RowList)\n    };\n    function doSearch() {\n        let text=document.getElementById(\"search\").value\n        let url=`http://localhost:5000/usuarios?q=${text}&attr=nome`\n        update(url)\n    };\n    /* Atualizar a lista sempre que a lista for renderizada */\n    useEffect(()=>update(\"http://localhost:5000/usuarios\"),[])\n    if (localStorage.getItem(\"logged\")==\"true\"){\n        return(\n        <ListContainer>\n                    <ToolsListBarS>\n                        <SearchBar>\n                            <div>\n                                <button onClick={doSearch}>\n                                    <img src=\"/images/icons/ico_find.png\" width=\"40px\"></img>\n                                </button>\n                                <input id='search'></input>\n                            </div>\n                        </SearchBar>\n                        <Pages>\n                            <span>\n                                <button> ≺ </button>\n                                <p>1</p>\n                                <button> ≻ </button>\n                            </span>\n                        </Pages>\n                    </ToolsListBarS>\n                    <List>\n                        <ListHeader>\n                            <h2>Nome</h2>\n                            <h2>CPF</h2>\n                            <h2>Email</h2>\n                            <h2>Cidade</h2>\n                            <h2>tools</h2>\n                        </ListHeader>\n                        {Lista}\n                    </List>\n                    <button onClick={update}></button>\n            </ListContainer> \n        );\n    }else{\n        return <NotLogged/>\n    }\n};\nexport default ListUser","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/loginForm.jsx",["99"],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/addUserForm.jsx",["100","101"],"import {UserForm} from \"../style\"\nimport UserInput from \"./userInput\"\nimport NotLogged from \"../generic/notLogged\"\nimport {checkEmail,checkCPF,sendToast,isEmpty,ViaCEP,\n      dinamicEmail,dinamicNome,dinamicCPF,dinamicCidade,\n      dinamicBairro,dinamicRua,dinamicNumero\n    } \nfrom \"../functions.js\"\nfunction AddUserForm(props) {\n  function doSubmit(){\n      const nome=document.getElementById(\"nome\")\n      const cpf=document.getElementById(\"cpf\")\n      const email=document.getElementById(\"email\")\n      const cep=document.getElementById(\"cep\")\n      const rua=document.getElementById(\"rua\")\n      const numero=document.getElementById(\"numero\")\n      const bairro=document.getElementById(\"bairro\")\n      const cidade=document.getElementById(\"cidade\")\n      /* ---------Validação------- */\n      if (\n        isEmpty(nome.value)&&\n        isEmpty(cpf.value)&&\n        isEmpty(email.value)&&\n        isEmpty(cep.value)&&\n        isEmpty(rua.value)&&\n        isEmpty(numero.value)&&\n        isEmpty(bairro.value)&&\n        isEmpty(cidade.value)&&\n        checkEmail(email)\n      )\n        {\n          console.log(props.action)\n          if(props.action==\"PUT\"){\n            console.log(\"PUT\")\n            PUT(\n              nome.value,cpf.value,email.value,rua.value,\n              bairro.value,cidade.value,cep.value,numero.value\n            )}else{\n            console.log(\"POST\")\n            POST(\n              nome.value,cpf.value,email.value,rua.value,\n              bairro.value,cidade.value,cep.value,numero.value\n              )}\n          }\n        else{\n          sendToast(\"testee\")\n        }\n      \n  };\n  async function POST(\n    nome,cpf,email,rua,bairro,cidade,cep,numero\n    ){\n    console.log(\"passei no post\")\n    const Mydb=\"http://localhost:5000/usuarios\"\n     const data={\n       id:\"\",\n      nome:nome,\n      cpf:cpf,\n      email:email,\n      endereco: {\n        cep:cep,\n        rua:rua,\n        numero:numero,\n        bairro:bairro,\n        cidade:cidade,\n        }   \n      }\n    const options={\n      method:'POST',\n      body:JSON.stringify(data),\n      headers:{\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    fetch(Mydb,options)\n    .then(sendToast(\"Usuário adicionado!\",\"success\"))\n  }\n  async function PUT(\n    nome,cpf,email,rua,bairro,cidade,cep,numero\n    ){\n    console.log(\"passei no post\")\n    const Mydb=`http://localhost:5000/usuarios/${props.userID}`\n     const data={\n       id:\"\",\n      nome:nome,\n      cpf:cpf,\n      email:email,\n      endereco: {\n        cep:cep,\n        rua:rua,\n        numero:numero,\n        bairro:bairro,\n        cidade:cidade,\n        }   \n      }\n    const options={\n      method:'PUT',\n      body:JSON.stringify(data),\n      headers:{\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    fetch(Mydb,options)\n  }\n  if (localStorage.getItem(\"logged\")==\"true\"){\n  return (\n    <UserForm>\n      <div>\n        <UserInput \n          id_img=\"img-nome\" placeholder=\"Username\" src=\"/images/icons/ico_user_default.png\" \n           id=\"nome\" Blur={dinamicNome} value={props.nome}\n        />\n        <UserInput \n          id_img=\"img-cpf\" placeholder=\"CPF\" src=\"/images/icons/ico_cpf.png\" \n           id=\"cpf\"  func={checkCPF} size={14} Blur={dinamicCPF} value={props.cpf}\n        />\n        <UserInput \n          id_img=\"img-email\" placeholder=\"Email\" src=\"/images/icons/ico_email.png\" \n           id=\"email\" Blur={dinamicEmail}  value={props.email}\n        />\n        <UserInput \n          id_img=\"img-cep\"  placeholder=\"CEP\" src=\"/images/icons/ico_endereco.png\" \n           id=\"cep\" Blur={ViaCEP} value={props.cep}\n        />\n        <UserInput \n          id_img=\"img-cidade\"  placeholder=\"Cidade\" src=\"/images/icons/ico_cidade.png\" \n           id=\"cidade\" Blur={dinamicCidade} value={props.cidade}\n        />\n        <UserInput \n          id_img=\"img-bairro\"  placeholder=\"Bairro\" src=\"/images/icons/ico_endereco.png\" \n           id=\"bairro\" Blur={dinamicBairro} value={props.bairro}\n        />\n        <UserInput \n          id_img=\"img-rua\"  placeholder=\"Rua\" src=\"/images/icons/ico_endereco.png\" \n           id=\"rua\" Blur={dinamicRua} value={props.rua}\n        />\n        <UserInput \n          id_img=\"img-numero\"  placeholder=\"Número\" src=\"/images/icons/ico_home.png\" \n           id=\"numero\" type=\"number\" Blur={dinamicNumero} value={props.numero}\n        />\n        <button onClick={doSubmit}>Confirmar</button>\n      </div>\n    </UserForm>\n  );}\n  else{\n    return <NotLogged/>\n  }\n}\nexport default AddUserForm;","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/functions.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/toast.jsx",[],["124","125"],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/listRow.jsx",[],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/editPage.jsx",["126","127"],"/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/alreadyLogged.jsx",["128"],"import {AddBody} from \"../style\"\nfunction AlreadyLogged() {\n    return (\n      <div>\n          <h2>Você já está logado!</h2>\n          <a\n            href=\"/\" onClick={()=>\n            localStorage.setItem('logged',false)}>\n            Singout</a>\n      </div>\n    );\n}\nexport default AlreadyLogged","/home/dsenvolvimento/Documents/Projetos/Prova2SOW/src/components/generic/notLogged.jsx",["129"],"import {AddBody} from \"../style\"\nfunction NotLogged() {\n    return (\n      <div>\n            <h2>Você não está logado!</h2>\n            <a href=\"/\">\n                Entrar\n            </a>\n      </div>\n    );\n}\nexport default NotLogged",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":6,"column":36,"nodeType":"136","messageId":"137","endLine":6,"endColumn":38},{"ruleId":"138","severity":1,"message":"139","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":5,"column":39,"nodeType":"136","messageId":"137","endLine":5,"endColumn":41},{"ruleId":"142","severity":1,"message":"143","line":9,"column":21,"nodeType":"144","endLine":9,"endColumn":76},{"ruleId":"142","severity":1,"message":"143","line":13,"column":25,"nodeType":"144","endLine":13,"endColumn":75},{"ruleId":"142","severity":1,"message":"143","line":17,"column":25,"nodeType":"144","endLine":17,"endColumn":76},{"ruleId":"142","severity":1,"message":"143","line":32,"column":25,"nodeType":"144","endLine":32,"endColumn":80},{"ruleId":"142","severity":1,"message":"143","line":36,"column":29,"nodeType":"144","endLine":36,"endColumn":79},{"ruleId":"142","severity":1,"message":"143","line":40,"column":29,"nodeType":"144","endLine":40,"endColumn":80},{"ruleId":"142","severity":1,"message":"143","line":6,"column":13,"nodeType":"144","endLine":7,"endColumn":46},{"ruleId":"145","severity":1,"message":"146","line":13,"column":17,"nodeType":"147","endLine":13,"endColumn":34},{"ruleId":"142","severity":1,"message":"143","line":16,"column":13,"nodeType":"144","endLine":17,"endColumn":56},{"ruleId":"148","severity":1,"message":"149","line":42,"column":60,"nodeType":"150","endLine":42,"endColumn":62,"suggestions":"151"},{"ruleId":"134","severity":1,"message":"135","line":43,"column":39,"nodeType":"136","messageId":"137","endLine":43,"endColumn":41},{"ruleId":"142","severity":1,"message":"143","line":50,"column":37,"nodeType":"144","endLine":50,"endColumn":88},{"ruleId":"142","severity":1,"message":"143","line":9,"column":17,"nodeType":"144","endLine":9,"endColumn":76},{"ruleId":"134","severity":1,"message":"135","line":33,"column":26,"nodeType":"136","messageId":"137","endLine":33,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":105,"column":37,"nodeType":"136","messageId":"137","endLine":105,"endColumn":39},{"ruleId":"134","severity":1,"message":"135","line":6,"column":11,"nodeType":"136","messageId":"137","endLine":6,"endColumn":13},{"ruleId":"134","severity":1,"message":"135","line":9,"column":15,"nodeType":"136","messageId":"137","endLine":9,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":12,"column":15,"nodeType":"136","messageId":"137","endLine":12,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":37,"column":29,"nodeType":"136","messageId":"137","endLine":37,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":38,"column":29,"nodeType":"136","messageId":"137","endLine":38,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":39,"column":29,"nodeType":"136","messageId":"137","endLine":39,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":40,"column":29,"nodeType":"136","messageId":"137","endLine":40,"endColumn":31},{"ruleId":"134","severity":1,"message":"152","line":41,"column":29,"nodeType":"136","messageId":"137","endLine":41,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":62,"column":16,"nodeType":"136","messageId":"137","endLine":62,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":62,"column":33,"nodeType":"136","messageId":"137","endLine":62,"endColumn":35},{"ruleId":"134","severity":1,"message":"135","line":65,"column":16,"nodeType":"136","messageId":"137","endLine":65,"endColumn":18},{"ruleId":"134","severity":1,"message":"152","line":74,"column":12,"nodeType":"136","messageId":"137","endLine":74,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":82,"column":16,"nodeType":"136","messageId":"137","endLine":82,"endColumn":18},{"ruleId":"134","severity":1,"message":"152","line":88,"column":33,"nodeType":"136","messageId":"137","endLine":88,"endColumn":35},{"ruleId":"134","severity":1,"message":"152","line":92,"column":30,"nodeType":"136","messageId":"137","endLine":92,"endColumn":32},{"ruleId":"134","severity":1,"message":"152","line":96,"column":34,"nodeType":"136","messageId":"137","endLine":96,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":114,"column":17,"nodeType":"136","messageId":"137","endLine":114,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":123,"column":23,"nodeType":"136","messageId":"137","endLine":123,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":132,"column":19,"nodeType":"136","messageId":"137","endLine":132,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":141,"column":16,"nodeType":"136","messageId":"137","endLine":141,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":150,"column":19,"nodeType":"136","messageId":"137","endLine":150,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":159,"column":19,"nodeType":"136","messageId":"137","endLine":159,"endColumn":21},{"ruleId":"130","replacedBy":"153"},{"ruleId":"132","replacedBy":"154"},{"ruleId":"138","severity":1,"message":"155","line":2,"column":19,"nodeType":"140","messageId":"141","endLine":2,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":8,"column":34,"nodeType":"144","endLine":8,"endColumn":86},{"ruleId":"138","severity":1,"message":"156","line":1,"column":9,"nodeType":"140","messageId":"141","endLine":1,"endColumn":16},{"ruleId":"138","severity":1,"message":"156","line":1,"column":9,"nodeType":"140","messageId":"141","endLine":1,"endColumn":16},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'SingOut' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array.","ArrayExpression",["159"],"Expected '!==' and instead saw '!='.",["157"],["158"],"'FormEdit' is defined but never used.","'AddBody' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [update]",{"range":"162","text":"163"},[1601,1603],"[update]"]